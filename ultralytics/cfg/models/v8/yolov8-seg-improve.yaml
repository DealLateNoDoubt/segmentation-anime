# Improve-Info
# 1, neck -> bifpn
# 2, neck -> add GLSA聚合模块来加强特征
# 3, 使用C2f_Star替换C2f
# 4, bockbone使用微软StarNet替换，使模型轻量化
# 5，SPPF后加入PSA通道注意力

# YOLOv8l-seg-improve summary: 830 layers, 20007752 parameters, 20007736 gradients, 125.9 GFLOPs

# Parameters
nc: 1 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov10n.yaml' will call yolov10.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

fusion_mode: bifpn
node_mode: C2f_Star
head_channel: 256


backbone:
  # [from, repeats, module, args]
  - [-1, 1, starnet_s2, [False]]  # 4
  - [-1, 1, EMA, []]  # 5
  - [-1, 1, SPPF, [1024, 5]]  # 6

head:
  - [2, 1, GLSA, [head_channel]]  # 7-P3/8
  - [3, 1, GLSA, [head_channel]]  # 8-P4/16
  - [6, 1, GLSA, [head_channel]]  # 9-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 10 P5->P4
  - [[-1, 8], 1, Fusion, [fusion_mode]] # 11
  - [-1, 3, node_mode, [head_channel]] # 12-P4/16

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13 P4->P3
  - [[-1, 7], 1, Fusion, [fusion_mode]] # 14
  - [-1, 3, node_mode, [head_channel]] # 15-P3/8

  - [1, 1, Conv, [head_channel, 3, 2]] # 16 P2->P3
  - [[-1, 7, 15], 1, Fusion, [fusion_mode]] # 17
  - [-1, 3, node_mode, [head_channel]] # 18-P3/8

  - [-1, 1, Conv, [head_channel, 3, 2]] # 19 P3->P4
  - [[-1, 8, 12], 1, Fusion, [fusion_mode]] # 20
  - [-1, 3, node_mode, [head_channel]] # 21-P4/16

  - [-1, 1, Conv, [head_channel, 3, 2]] # 22 P4->P5
  - [[-1, 9], 1, Fusion, [fusion_mode]] # 23
  - [-1, 3, node_mode, [head_channel]] # 24-P5/32

  - [[18, 21, 24], 1, Segment, [nc, 32, 256]] # Segment(P3, P4, P5)
